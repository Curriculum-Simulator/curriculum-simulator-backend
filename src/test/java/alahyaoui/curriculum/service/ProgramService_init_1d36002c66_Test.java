// Test generated by RoostGPT for test knote-java using AI Type Open AI and AI Model gpt-4

package alahyaoui.curriculum.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import java.io.IOException;
import com.opencsv.exceptions.CsvValidationException;

public class ProgramService_init_1d36002c66_Test {

    @InjectMocks
    private ProgramService programService;

    @Mock
    private CourseGraph courseGraph;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testInit_Success() throws NumberFormatException, CsvValidationException, IOException {
        programService.init();
    }

    @Test
    public void testInit_NumberFormatException() throws NumberFormatException, CsvValidationException, IOException {
        when(courseGraph.initGraph()).thenThrow(NumberFormatException.class);
        try {
            programService.init();
        } catch (NumberFormatException e) {
            assertEquals(NumberFormatException.class, e.getClass());
        }
    }

    @Test
    public void testInit_CsvValidationException() throws NumberFormatException, CsvValidationException, IOException {
        when(courseGraph.initGraph()).thenThrow(CsvValidationException.class);
        try {
            programService.init();
        } catch (CsvValidationException e) {
            assertEquals(CsvValidationException.class, e.getClass());
        }
    }

    @Test
    public void testInit_IOException() throws NumberFormatException, CsvValidationException, IOException {
        when(courseGraph.initGraph()).thenThrow(IOException.class);
        try {
            programService.init();
        } catch (IOException e) {
            assertEquals(IOException.class, e.getClass());
        }
    }
}
