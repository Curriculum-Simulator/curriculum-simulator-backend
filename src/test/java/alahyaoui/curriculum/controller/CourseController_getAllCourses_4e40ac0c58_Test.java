// Test generated by RoostGPT for test knote-java using AI Type Open AI and AI Model gpt-4

package alahyaoui.curriculum.controller;

import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.ui.Model;
import org.springframework.validation.support.BindingAwareModelMap;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;
import alahyaoui.curriculum.model.Course;
import alahyaoui.curriculum.service.CourseService;

public class CourseController_getAllCourses_4e40ac0c58_Test {

    @InjectMocks
    private CourseController courseController;

    @Mock
    private CourseService courseService;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetAllCourses_Success() {
        Course course1 = new Course();
        course1.setId(1);
        course1.setName("Course 1");

        Course course2 = new Course();
        course2.setId(2);
        course2.setName("Course 2");

        List<Course> courses = Arrays.asList(course1, course2);

        when(courseService.getAllCourses()).thenReturn(courses);

        Model model = new BindingAwareModelMap();
        String view = courseController.getAllCourses(model);

        assertEquals("course_result", view);
        assertEquals(courses, model.getAttribute("courses"));
    }

    @Test
    public void testGetAllCourses_Empty() {
        when(courseService.getAllCourses()).thenReturn(Arrays.asList());

        Model model = new BindingAwareModelMap();
        String view = courseController.getAllCourses(model);

        assertEquals("course_result", view);
        assertEquals(Arrays.asList(), model.getAttribute("courses"));
    }
}
